while _G.running do

local x = "kys"

local Player = game.Players.LocalPlayer
local PG = Player.PlayerGui

pcall(function()
    for _,v in game:GetService("CoreGui").RobloxPromptGui.promptOverlay:GetChildren() do
        if v.Name == "ErrorPrompt" and v:FindFirstChild("MessageArea") and v.MessageArea:FindFirstChild("ErrorFrame") then
            task.wait(2)

            for _ = 1, 30 do
                game:GetService("TeleportService"):Teleport(536102540, Player)
                task.wait(2)
            end
        end
    end

    game:GetService("CoreGui").RobloxPromptGui.promptOverlay.ChildAdded:Connect(function(child)
        if child.Name == "ErrorPrompt" and child:FindFirstChild("MessageArea") and child.MessageArea:FindFirstChild("ErrorFrame") then
            task.wait(2)

            for _ = 1, 30 do
                game:GetService("TeleportService"):Teleport(536102540, Player)
                task.wait(2)
            end
        end
    end)
end)

local Stop = false
local Temp = Player.Character or Player.CharacterAdded:Wait()

local WaitingForPointSlot
Fixing = false

local BoosterTries = 0
local HardResets = 0

local Successful = 0
local Failed = 0

Finished = false

Last = false

Doing = false

Player.Idled:Connect(function()
    game:GetService("VirtualUser"):CaptureController()
    game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)

task.wait(1 + Settings.ExtraTime)

if game.PlaceId == 552500546 then
    task.wait(1)
    repeat

        task.wait(0.5)
        Player.Backpack.Scripter.RemoteEvent:FireServer(PG.Setup.Frame.Side.Race,"up")
        task.wait(0.5)
        if PG.Setup.Frame.Side.Race.Set.Texter.Text == "Namekian" then break end

    until PG.Setup.Frame.Side.Race.Set.Texter.Text == "Namekian"

    Player.Backpack.Scripter.RemoteEvent:FireServer("woah")

    return
end

local function SendNotification(Title, Text, Duration)
    game:GetService("StarterGui"):SetCore("SendNotification",{Title = Title,Text = Text,Duration = Duration})
end

local function WaitTill(instance, Text, ExtraTime, npc)
    repeat task.wait() until (instance.Text == Text and Player.PlayerGui.HUD.Bottom.ChatGui.Visible == true)

    if ExtraTime > 0 then
        task.wait(ExtraTime)
    end
end

local function Talk(NPC, Content, WaitTime, Texts, Wait, SkipStop)
    if not Player.Backpack:FindFirstChild("ServerTraits") then
        Player.Backpack:WaitForChild("ServerTraits", 30)
    end

    Player.Backpack.ServerTraits.ChatStart:FireServer(NPC ~= "Korin" and workspace.FriendlyNPCs[NPC] or (NPC == "Korin" and workspace.FriendlyNPCs[NPC].Chat.Chat))

    for idx = 1, #Content do

        if Settings.Mode2 and NPC == "Character Slot Changer" and Texts and Texts ~= true and Texts[idx] == "Change Character Slots?" then
            repeat
                Player.Backpack.ServerTraits.ChatStart:FireServer(workspace.FriendlyNPCs["Character Slot Changer"])
                task.wait()
            until PG.HUD.Bottom.ChatGui.Visible == true
        end

        if Wait then
            WaitTill(Player.PlayerGui.HUD.Bottom.ChatGui.TextLabel, Texts[idx], WaitTime, NPC)
        else
            task.wait(Settings.WaitTimeTalk + 0.40)
        end

        if not SkipStop and Stop then
            repeat task.wait() until not Stop
        end

        if Settings.Mode2 and Texts and Texts ~= true and Texts[idx] == "Change Character Slots?" then
            repeat
                Player.Backpack.ServerTraits.ChatAdvance:FireServer({"Yes"})
                task.wait()
            until PG.HUD.Bottom.ChatGui.TextLabel.Text == "Alright"

            repeat
                Player.Backpack.ServerTraits.ChatAdvance:FireServer({"k"})
                task.wait()
            until PG.HUD.Bottom.ChatGui.TextLabel.Text == "Which slot would you like to play in?"

            task.wait(Settings.WaitTimeSlotChange + 0.1)

            Player.Backpack.ServerTraits.ChatAdvance:FireServer({Content[3]})

            task.delay(1, function()
                if PG.HUD.Bottom.ChatGui.TextLabel.Text == "Which slot would you like to play in?" then
                    Player.Backpack.ServerTraits.ChatAdvance:FireServer({Content[3]})
                end
            end)

            break
        end

        Player.Backpack.ServerTraits.ChatAdvance:FireServer({Content[idx]})
    end
end

if Player.PlayerGui:FindFirstChild("HUD") and not Finished then
    task.wait(0.1)

    Player.PlayerGui.HUD.Bottom.ChatGui.TextLabel:GetPropertyChangedSignal("Text"):Connect(function()
        if Player.PlayerGui.HUD.Bottom.ChatGui.TextLabel.Text == "Mr Popo is a nice guy" then
            Stop = true

            task.wait(6 + Settings.CharacterDelayTime)

            if not Settings.IsPointSlotANamekian and Player.Character.Race.Value ~= "Namekian" then
                local Tries = 0

                repeat
                    Talk("Character Slot Changer", {"Yes", "k", Settings.NamekSlot}, Settings.WaitTimeSlotChange + 0.3, {"Change Character Slots?", "Alright", "Which slot would you like to play in?", "Loading!"}, true, true)

                    task.wait(5)

                    if Tries >= 3 then
                        makefolder("HauntRejoin")
                    end

                    if Player.Character.Race.Value ~= "Namekian" then
                        Tries += 1
                    end

                until Player.Character.Race.Value == "Namekian"

                Talk("Start New Game [Redo Character]", {"No", "k", "No"}, 0.6, nil, false, true)

            elseif Player.Character.Race.Value == "Namekian" then
                Talk("Character Slot Changer", {"Yes", "k", Settings.NamekSlot}, Settings.WaitTimeSlotChange + 0.3, {"Change Character Slots?", "Alright", "Which slot would you like to play in?", "Loading!"}, true, true)

                task.wait(5)

                Talk("Start New Game [Redo Character]", {"No", "k", "No"}, 0.6, nil, false, true)
            end
        end
    end)
end

PG.ChildAdded:Connect(function(Child)
    if Child.Name == "HUD" and not Finished then
        task.wait(0.1)

        Player.PlayerGui.HUD.Bottom.ChatGui.TextLabel:GetPropertyChangedSignal("Text"):Connect(function()
            if Player.PlayerGui.HUD.Bottom.ChatGui.TextLabel.Text == "Mr Popo is a nice guy" then
                Stop = true

                task.wait(5 + Settings.CharacterDelayTime)

                if not Settings.IsPointSlotANamekian and Player.Character.Race.Value ~= "Namekian" then
                    local Tries = 0

                    repeat
                        Talk("Character Slot Changer", {"Yes", "k", Settings.NamekSlot}, Settings.WaitTimeSlotChange + 0.3, {"Change Character Slots?", "Alright", "Which slot would you like to play in?", "Loading!"}, true, true)

                        task.wait(1)

                        if Tries >= 3 then
                            makefolder("Haunt")
                        end

                        if Player.Character.Race.Value ~= "Namekian" then
                            Tries += 1
                        end

                    until Player.Character.Race.Value == "Namekian"

                    Talk("Start New Game [Redo Character]", {"No", "k", "No"}, 0.6, nil, false, true)

                elseif Player.Character.Race.Value == "Namekian" then
                    Talk("Character Slot Changer", {"Yes", "k", Settings.NamekSlot}, Settings.WaitTimeSlotChange + 0.3, {"Change Character Slots?", "Alright", "Which slot would you like to play in?", "Loading!"}, true, true)

                    task.wait(5)

                    Talk("Start New Game [Redo Character]", {"No", "k", "No"}, 0.6, nil, false, true)
                end
            end
        end)
    end
end)

if not Settings.IsPointSlotANamekian and Player.Character.Race.Value ~= "Namekian" then
    Talk("Character Slot Changer", {"Yes", "k", Settings.NamekSlot}, Settings.WaitTimeSlotChange, {"Change Character Slots?", "Alright", "Which slot would you like to play in?", "Loading!"}, true)

    task.wait(4)
end

-- Bucle principal de verificación
task.spawn(function()
    while not Finished do
        local currentPoints = tonumber(Player.PlayerGui.HUD.Bottom.Stats.StatPoints.Val.Text)
        local currentRace = Player.Character.Race.Value

        -- Solo verificamos MaxStatPoints si el personaje es Namekiano
        if currentRace == "Namekian" and currentPoints == Settings.MaxStatPoints then
            if not Settings.IsPointSlotANamekian then
                Talk("Character Slot Changer", {"Yes", "k", Settings.NamekSlot}, Settings.WaitTimeSlotChange + 0.3, {
                    "Change Character Slots?", "Alright", "Which slot would you like to play in?", "Loading!"
                }, true)
                task.wait(6)
            end

            Talk("Start New Game [Redo Character]", {"Yes", "k", "Yes"}, 0.6, nil, false)
        end

        -- Verificación general para cualquier raza
        if currentPoints >= Settings.MaxPoints then
            Finished = true
            Player.PlayerGui.HUD.Bottom.Stats.Labvel.TextLabel.Text = "MAX POINTS REACHED"
            SendNotification("Veeruz", "Max points reached", 5)
            break -- Salimos del bucle
        end

        task.wait(0.5) -- Espera entre ciclos para rendimiento
    end
end)

-- Definimos la función para manejar el caso de nivel menor a 44
local function HandleLevelBelow44()
    Talk("Bulma", {"k", "Yes", "k"} , Settings.WaitTimeTalk, nil, false)
    task.wait(0.8)

    Talk("Spaceship", {"No", "k"}, Settings.WaitTimeTalk, nil, false)
    task.wait(0.5)

    Talk("Trunks [Future]", {"k","Yes","k"}, Settings.WaitTimeTalk, nil, false)
    task.wait(0.8)

    Talk("TimeMachine",{"No", "k"}, Settings.WaitTimeTalk, nil, false)
    task.wait(0.5)

    workspace.FriendlyNPCs["Quest Giver"]:Destroy()
    workspace.FriendlyNPCs["Quest Giver"]:Destroy()

    Talk("Quest Giver",{"k","Yes","k"}, Settings.WaitTimeTalk, nil, false)
    task.wait(0.8)

    Talk("NamekianShip",{"k","No","k"}, Settings.WaitTimeTalk, nil, false)
    task.wait(0.7)

    Talk("Elder Kai",{"k","Yes","k", "k"}, Settings.WaitTimeTalk, nil, false)
    task.wait(0.7)

    Talk("Korin", {"k", "k", "DRINK", "k"}, {"Hello", "When you drink it increases your power!", "*DRINKS*"}, true)
    task.wait(3)
end

-- Verificamos si el nivel es menor a 55
if tonumber(Player.PlayerGui.HUD.Bottom.Stats.LVL.Val.Text) < 55 then
    if tonumber(Player.PlayerGui.HUD.Bottom.Stats.LVL.Val.Text) < 44 then
        HandleLevelBelow44() -- Llamamos a la función si el nivel es menor a 44
    elseif tonumber(Player.PlayerGui.HUD.Bottom.Stats.LVL.Val.Text) == 44 then
        Talk("Korin", {"k", "k", "DRINK", "k"}, {"Hello", "When you drink it increases your power!", "*DRINKS*"}, true)
        task.wait(3)
    end
else
    print("Slot Namekiano ha alcanzado el nivel 75.")
    -- Aquí puedes añadir cualquier otra acción específica para nivel 55 o superior, si lo necesitas.
end

-- Conexión principal: Detectar cuando se añade un nuevo personaje
local Conn
Conn = Player.CharacterAdded:Connect(function()
    -- Esperar que el personaje tenga "HumanoidRootPart"
    Player.Character:WaitForChild("HumanoidRootPart", 30)

    -- Teletransportar al personaje a una posición específica
    repeat
        task.wait()
        Player.Character.HumanoidRootPart.CFrame = CFrame.new(-455.61, 27.99, -6409.75)
    until Player.Character:FindFirstChild("PowerOutput")

    -- Conexión secundaria: Monitorear cambios en el texto de ChatGui
    local Conn2
    Conn2 = PG:WaitForChild("HUD", 30).Bottom.ChatGui.TextLabel:GetPropertyChangedSignal("Text"):Connect(function()
        Last = tick() -- Registrar el momento del cambio de texto
        task.wait(10)

        -- Verificar si han pasado 10 segundos desde el último cambio
        if tick() - Last >= 10 and BoosterTries < 5 and not Doing then
            Doing = true

            -- Finalizar conexiones si el proceso ya está terminado
            if Finished then
                Conn:Disconnect()
                Conn2:Disconnect()
                return
            end

            -- Incrementar reinicios duros y manejar errores graves
            HardResets += 1
            if HardResets >= 5 then
                makefolder("Veeruz rejoin")
            end

            Fixing = true
            Stop = true

            -- Reiniciar al personaje forzadamente
            Player.Character.Humanoid.Health = 0
            Player.Character.Head:Destroy()
            Player.CharacterAdded:Wait()
            Player.Character:WaitForChild("PowerOutput", 30)
            task.wait(1)

            Stop = false
            local took = "none"

            -- Determinar qué ranura usar
            if WaitingForPointSlot then
                took = "namek"
                Talk("Character Slot Changer", {"Yes", "k", Settings.NamekSlot}, Settings.WaitTimeSlotChange, {"Change Character Slots?", "Alright", "Which slot would you like to play in?", "Loading!"}, true)
            else
                took = "point"
                Talk("Character Slot Changer", {"Yes", "k", Settings.PointSlot}, Settings.WaitTimeSlotChange, {"Change Character Slots?", "Alright", "Which slot would you like to play in?", "Loading!"}, true)
            end

            Stop = true
            local Char = Player.Character

            -- Intentar cambiar ranura nuevamente después de 6 segundos
            task.delay(1, function()
                Stop = false
                if Player.Character == Char then
                    if took == "namek" then
                        Talk("Character Slot Changer", {"Yes", "k", Settings.PointSlot}, Settings.WaitTimeSlotChange, {"Change Character Slots?", "Alright", "Which slot would you like to play in?", "Loading!"}, true)
                    else
                        Talk("Character Slot Changer", {"Yes", "k", Settings.NamekSlot}, Settings.WaitTimeSlotChange, {"Change Character Slots?", "Alright", "Which slot would you like to play in?", "Loading!"}, true)
                    end
                end
            end)

            Player.CharacterAdded:Wait()
            Doing = false
            Fixing = false
        end
    end)
end)

task.spawn(function()
    while true do
        if BoosterTries >= 100 then

            Stop = true

            task.wait(5 + Settings.CharacterDelayTime)

            if not Settings.IsPointSlotANamekian and Player.Character.Race.Value ~= "Namekian" then
                local Tries = 0

                repeat
                    Talk("Character Slot Changer", {"Yes", "k", Settings.NamekSlot}, Settings.WaitTimeSlotChange + 0.3, {"Change Character Slots?", "Alright", "Which slot would you like to play in?", "Loading!"}, true, true)

                    task.wait(1)

                    if Tries >= 3 then
                        makefolder("VeeruzRejoin")
                    end

                    if Player.Character.Race.Value ~= "Namekian" then
                        Tries += 1
                    end

                until Player.Character.Race.Value == "Namekian"

                Talk("Start New Game [Redo Character]", {"No", "k", "No"}, 0.6, nil, false, true)

            elseif Player.Character.Race.Value == "Namekian" then
                Talk("Character Slot Changer", {"Yes", "k", Settings.NamekSlot}, Settings.WaitTimeSlotChange + 0.3, {"Change Character Slots?", "Alright", "Which slot would you like to play in?", "Loading!"}, true, true)

                task.wait(5)

                Talk("Start New Game [Redo Character]", {"No", "k", "No"}, 0.6, nil, false, true)
            end

            break
        end

        task.wait()
    end
end)

while true do
    pcall(function()
        if Player.Character.Race.Value ~= "Namekian" and not Settings.IsPointSlotANamekian then
            task.wait(1)

            Talk("Character Slot Changer", {"Yes", "k", Settings.NamekSlot}, Settings.WaitTimeSlotChange, {"Change Character Slots?", "Alright", "Which slot would you like to play in?", "Loading!"}, true)

            Player.CharacterAdded:Wait()

            if Fixing then
                repeat task.wait() until not Fixing
            end

            task.wait(0.5)

            Player.Character:WaitForChild("PowerOutput", 30)

            task.wait(Settings.CharacterDelayTime)
        end
    end)

    WaitingForPointSlot = false

    Player.Character.HumanoidRootPart.ChildAdded:Connect(function(Child)
        if Child.Name == "Booster" then
            Failed -= 1
            Successful += 1
            BoosterTries = 0
        end
    end)

    Failed += 1
    BoosterTries += 1

    pcall(function()
        Talk("Character Slot Changer", {"Yes", "k", Settings.PointSlot}, Settings.WaitTimeSlotChange, {"Change Character Slots?", "Alright", "Which slot would you like to play in?", "Loading!"}, true)
    end)

    task.wait(Settings.KamiChatDelay)

    if not Player.Backpack:FindFirstChild("ServerTraits") then
        pcall(function()
            Player.Backpack:WaitForChild("ServerTraits", 30)
        end)
    end

-- Función para ejecutar el chat y otorgar puntos
local function grantPoints(chatObject)
    Player.Backpack.ServerTraits.ChatStart:FireServer(chatObject.Chat)
    Player.Backpack.ServerTraits.ChatAdvance:FireServer({"k"})
end

-- Función principal para manejar la ejecución
local function main()
    -- Busca el objeto de chat una sola vez
    local chatObject = workspace.FriendlyNPCs:FindFirstChild("KAMI") 
                    or game.ReplicatedStorage.Hidden:FindFirstChild("KAMI")

    if chatObject then
        -- Ejecuta grantPoints dos veces en paralelo
        task.spawn(function()
            grantPoints(chatObject)
        end)
        task.spawn(function()
            grantPoints(chatObject)
        end)
    else
        warn("No se encontró ningún objeto KAMI.")
    end
end

main()

    -- Esperar a que se añada un personaje
Player.CharacterAdded:Wait()

-- Si está en proceso de reparación, esperar hasta que termine
if Fixing then
    repeat task.wait() until not Fixing
end

task.wait(0.2)

-- Asegurarse de que el personaje tiene "PowerOutput"
Player.Character:WaitForChild("PowerOutput", 30)
task.wait(Settings.CharacterDelayTime)

local breakk = false -- Variable para controlar la interrupción del bucle principal

-- Intentar ejecutar la lógica principal
pcall(function()
    -- Cambiar de ranura si el personaje es Namekiano pero no está en la ranura correcta
    if Player.Character.Race.Value == "Namekian" and not Settings.IsPointSlotANamekian then
        task.wait(1)
        Talk("Character Slot Changer", {"Yes", "k", Settings.PointSlot}, Settings.WaitTimeSlotChange, 
            {"Change Character Slots?", "Alright", "Which slot would you like to play in?", "Loading!"}, true)
        
        Player.CharacterAdded:Wait()

        if Fixing then
            repeat task.wait() until not Fixing
        end

        task.wait(0.5)
        Player.Character:WaitForChild("PowerOutput", 30)
        task.wait(Settings.CharacterDelayTime)
    end

    -- Configuración para ocultar el nombre del jugador
    if Settings.HideName then
        Player.PlayerGui.HUD:WaitForChild("Bottom", 30).Stats.Namae.Val.Text = "Veeruz"
    end

    -- Mostrar las estadísticas
    Player.PlayerGui.HUD.Bottom.Stats.Visible = true

    -- Cambiar el texto del nivel de estadísticas
    pcall(function()
        PG.HUD.Bottom.Stats.Labvel.TextLabel.Text = "INF_VIP_VEERUZ"
    end)

    -- Cambiar colores de la interfaz
    local player = game:GetService("Players").LocalPlayer
    local stats = player.PlayerGui.HUD.Bottom.Stats.Labvel
    stats.ImageColor3 = Color3.new(255, 255, 255) -- Color blanco

    stats = player.PlayerGui.HUD.Bottom.Stats
    stats.ImageColor3 = Color3.new(128, 0, 128) -- Color púrpura

    -- Verificar si los puntos de estadísticas han alcanzado el máximo
    if tonumber(Player.PlayerGui.HUD.Bottom.Stats.StatPoints.Val.Text) >= Settings.MaxPoints then
        Finished = true
        PG.HUD.Bottom.Stats.Labvel.TextLabel.Text = "Terminaste | Puntos Max"
        SendNotification("Veeruz", "Puntos Max", 5)
        breakk = true -- Señalar que se debe interrumpir el flujo principal
        return
    end
end)

-- Lógica para asignar automáticamente estadísticas
task.spawn(function()
    if Settings.AutoStats then
        for _ = 1, 500 do
            Player.Backpack.ServerTraits.AttemptUpgrade:FireServer(Player.PlayerGui.HUD.Bottom.Stats[Settings.Stat])
        end
    end
end)

-- Salir del flujo principal si se ha alcanzado el máximo
if breakk then
    return
end

-- Establecer bandera para esperar un cambio de ranura
WaitingForPointSlot = true

-- Cambiar de ranura al Namek Slot
pcall(function()
    Talk("Character Slot Changer", {"Yes", "k", Settings.NamekSlot}, Settings.WaitTimeSlotChange, 
        {"Change Character Slots?", "Alright", "Which slot would you like to play in?", "Loading!"}, true)
end)

-- Esperar a que se añada un nuevo personaje
Player.CharacterAdded:Wait()

-- Esperar hasta que termine el proceso de reparación si está activo
if Fixing then
    repeat task.wait() until not Fixing
end

task.wait(0.5)
Player.Character:WaitForChild("PowerOutput", 30)
task.wait(Settings.CharacterDelayTime)

end

 wait(0.1) -- Esto es clave para permitir que otras partes del script corran
    
    if _G.breakk then
        _G.running = false
    end
end
